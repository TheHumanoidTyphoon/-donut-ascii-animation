import math
import sys
import time

# Define functions for calculating sine and cosine
def calculate_sin(x):
    return math.sin(x)

def calculate_cos(x):
    return math.cos(x)

# Define function for drawing the donut
def draw_donut():
    """
    Generates an ASCII art animation of a rotating donut.

    The animation is generated by calculating the position and brightness of each
    pixel in the donut, and printing the pixels to the console using escape codes.
    The animation will continue to loop until the program is terminated.

    """
    # Initialize variables
    angle1 = 0.0
    angle2 = 0.0
    z_buffer = [0.0] * 1760
    pixels = [" "] * 1760
    
    # Clear the console
    print("\033[2J", end="")
    
    running = True
    while running:
        # Clear the pixel and z_buffer lists
        for i in range(len(pixels)):
            pixels[i] = " "
        z_buffer = [0.0] * 1760
        
        # Calculate the position and brightness of each pixel
        for j in range(0, 628, 7):
            for i in range(0, 628, 2):
                sin_i = calculate_sin(i / 100.0)
                cos_j = calculate_cos(j / 100.0)
                sin_angle1 = calculate_sin(angle1)
                sin_j = calculate_sin(j / 100.0)
                cos_angle1 = calculate_cos(angle1)
                height = cos_j + 2
                distance = 1 / (sin_i * height * sin_angle1 + sin_j * cos_angle1 + 5)
                cos_i = calculate_cos(i / 100.0)
                cos_angle2 = calculate_cos(angle2)
                sin_angle2 = calculate_sin(angle2)
                sin_height = sin_i * height * cos_angle1 - sin_j * sin_angle1
                x = int(40 + 30 * distance * (cos_i * height * cos_angle2 - sin_height * sin_angle2))
                y = int(12 + 15 * distance * (cos_i * height * sin_angle2 + sin_height * cos_angle2))
                index = x + 80 * y
                brightness = int(8 * ((sin_j * sin_angle1 - sin_i * cos_j * cos_angle1) * cos_angle2 - sin_i * cos_j * sin_angle1 - sin_j * cos_angle1 - cos_i * cos_j * sin_angle2))
                if 0 <= y < 22 and 0 <= x < 80 and distance > z_buffer[index]:
                    z_buffer[index] = distance
                    pixels[index] = ".,-~:;=!*#$@"[brightness if brightness > 0 else 0]
        
        # Print the pixels to the console
        sys.stdout.write("\033[H")
        sys.stdout.write("".join(pixels))
        sys.stdout.flush()
        
        # Update the angles for the next iteration
        angle1 += 0.30
        angle2 += 0.15


def main():
    draw_donut()

if __name__ == "__main__":
    main()

